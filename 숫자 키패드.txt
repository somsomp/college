#include <avr/io.h>
#include <util/delay.h>

unsigned char key_scan(unsigned char Row);

int main(void)
{
	unsigned char FONT[] = {0B00111111,0B00000110,0B01011011,0B01001111,0B01100110, 
		0B01101101,0B01111101,0B00000111,0B01111111,0B01101111,
		0B01110111,0B01111100,0B00111001,0B01011110,0B01111001,
		0B01110001,0B01000000}; //0~9, A, B, C, D, E, F, -
	unsigned char Key, Row0, Row1, Row2, Row3, N, N_old,NN[4]={16,16,16,16};

	DDRA = 0xff; //7segment Font
	DDRC = 0xff; //7segment Position

	do {
		Row0 = key_scan(0x01);
		Row1 = key_scan(0x02);
		Row2 = key_scan(0x04);
		Row3 = key_scan(0x08);
		Key = (Row1 | Row2 | Row3 | Row0);

		switch (Key){
			case 0b00010001: N=1; break;	case 0b00010010: N=2; break;	case 0b00010100: N=3; break;	case 0b00011000: N=10; break;
			case 0b00100001: N=4; break;	case 0b00100010: N=5; break;	case 0b00100100: N=6; break;	case 0b00101000: N=11; break;
			case 0b01000001: N=7; break;	case 0b01000010: N=8; break;	case 0b01000100: N=9; break;	case 0b01001000: N=12; break;
			case 0b10000001: N=14; break;	case 0b10000010: N=0; break;	case 0b10000100: N=15; break;	case 0b10001000: N=13; break;
		default : N=99;
	}
	if ((N != N_old)&&(N!=99)) {
		NN[0]=NN[1]; NN[1]=NN[2]; NN[2]=NN[3]; NN[3]=N;
		N_old = N;
	}
		
		PORTA=FONT[NN[0]]; PORTC = 0B0001110;	_delay_ms(2);
		PORTA=FONT[NN[1]]; PORTC = 0B0001101;	_delay_ms(2);
		PORTA=FONT[NN[2]]; PORTC = 0B0001011;	_delay_ms(2);
		PORTA=FONT[NN[3]]; PORTC = 0B0000111;	_delay_ms(2); //출력

		//PORTA = FONT[(Key >> 4)];		PORTC = 0B0001101;	_delay_ms(2);
		//PORTA = 0B01000000;		PORTC = 0B0001011;	_delay_ms(2);
		//PORTA = FONT[(Key & 0x0f)];		PORTC = 0B0000111;	_delay_ms(2);

	} while(1);
}
unsigned char key_scan(unsigned char Row)
{
	unsigned char in;

	DDRE = 0xff;		// all out,
	PORTE = Row;		// switch 값 출력 

	DDRE = 0x0f;		// Port 7bit~4bit(In) 3bit~0bit(Out)
	_delay_ms(5);
	in = PINE & 0xf0;		// 상위 비트 - 선택된 Key.

	if(in != 0x00) {
		in |= Row;  	// 상위비트는 Col, 하위비트는 Row.
		return in;
	}
	return 0;
}
